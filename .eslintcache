[{"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\index.js":"1","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\App.js":"2","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\pages\\Loginsignup.js":"3","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\pages\\chat.js":"4","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Signup.js":"5","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Signin.js":"6","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\firebase.js":"7","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Chatbox.js":"8","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\dummyrooms.js":"9","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Message.js":"10","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Sidebar.js":"11","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Activeroom.js":"12","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\constants.js":"13"},{"size":318,"mtime":1627995989934,"results":"14","hashOfConfig":"15"},{"size":283,"mtime":1627995666272,"results":"16","hashOfConfig":"15"},{"size":552,"mtime":1627730889722,"results":"17","hashOfConfig":"15"},{"size":155,"mtime":1627970044010,"results":"18","hashOfConfig":"15"},{"size":5141,"mtime":1627996250402,"results":"19","hashOfConfig":"15"},{"size":5355,"mtime":1627996164052,"results":"20","hashOfConfig":"15"},{"size":445,"mtime":1627717291529,"results":"21","hashOfConfig":"15"},{"size":1391,"mtime":1627967711936,"results":"22","hashOfConfig":"15"},{"size":3811,"mtime":1627965957362,"results":"23","hashOfConfig":"15"},{"size":397,"mtime":1627970083624,"results":"24","hashOfConfig":"15"},{"size":1658,"mtime":1627967528133,"results":"25","hashOfConfig":"15"},{"size":1974,"mtime":1627967704545,"results":"26","hashOfConfig":"15"},{"size":37,"mtime":1627996103292,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8twu1z",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\index.js",[],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\App.js",[],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\pages\\Loginsignup.js",["62"],"import React, { useState } from \"react\";\r\nimport Signup from \"../components/Signup\";\r\nimport Signin from \"../components/Signin\";\r\nimport Chat from \"../pages/chat\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nconst Loginsignup = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Signin} />\r\n        <Route path=\"/signup\" exact component={Signup} />\r\n        <Route path=\"/chat\" exact component={Chat} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default Loginsignup;\r\n",["63","64"],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\pages\\chat.js",[],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Signup.js",["65","66"],"import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useRef } from \"react\";\r\nimport fire from \"../firebase\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { USER } from \"../constants\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const firstNameRef = useRef(\"\");\r\n  const lastNameRef = useRef(\"\");\r\n  const emailRef = useRef(\"\");\r\n  const passwordRef = useRef(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const signUpHandler = () => {\r\n    // const firstName = firstNameRef.current.value\r\n    // const lastName = lastNameRef.current.value\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        localStorage.setItem(USER, response.user);\r\n        enqueueSnackbar(\"User Registered\", {\r\n          variant: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code.substring(5);\r\n        const errorMessage = error.message;\r\n        enqueueSnackbar(errorCode, {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                inputRef={firstNameRef}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                inputRef={lastNameRef}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                inputRef={emailRef}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={passwordRef}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            onClick={() => {\r\n              signUpHandler();\r\n            }}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Signin.js",["67","68","69"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport fire from \"../firebase\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport chat from \"../pages/chat\";\r\nimport createPalette from \"@material-ui/core/styles/createPalette\";\r\nimport { USER } from \"../constants\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const emailRef = useRef(\"\");\r\n  const passwordRef = useRef(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const signInHandler = () => {\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        // Signed in\r\n        console.log(userCredential);\r\n        setUser(userCredential.user);\r\n        localStorage.setItem(USER, userCredential.user);\r\n        history.push(\"/chat\");\r\n        enqueueSnackbar(\"Logged In\", {\r\n          variant: \"success\",\r\n        });\r\n        // ...\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code.substring(5).replaceAll(\"-\", \" \");\r\n        var errorMessage = error.message;\r\n        console.log(errorMessage, errorCode);\r\n        enqueueSnackbar(errorCode[0].toUpperCase() + errorCode.slice(1), {\r\n          variant: \"error\",\r\n        });\r\n      });\r\n\r\n    if (user != null) {\r\n      history.push(\"/chat\");\r\n    }\r\n  };\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User is signed in, see docs for a list of available properties\r\n        // https://firebase.google.com/docs/reference/js/firebase.User\r\n        setUser(user);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      console.log(user);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={emailRef}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={passwordRef}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              onClick={() => {\r\n                signInHandler();\r\n              }}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link variant=\"body2\">Forgot password?</Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"./signup\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\firebase.js",[],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Chatbox.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { dummyData, messages as dummyMessages } from \"./dummyrooms\";\r\nimport Message from \"./Message\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Activeroom from \"./Activeroom\";\r\nimport \"./chatbox.css\";\r\n\r\nconst Chatbox = () => {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [room, setRoom] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const scrollRef = useRef(null);\r\n  const user = \"Subhajit\";\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"container\">\r\n        <Grid item xs={3} className=\"sidebar\">\r\n          <Sidebar dummyData={dummyData}></Sidebar>\r\n        </Grid>\r\n        <Grid item xs className=\"chat-box\">\r\n          <Activeroom\r\n            user={user}\r\n            message={dummyMessages}\r\n            room={room}\r\n          ></Activeroom>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\dummyrooms.js",[],"C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Message.js",["87","88","89"],"import React, { useState } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Message = ({ data, user }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`message-wrapper ${\r\n          user === data.sender ? \"sent\" : \"received\"\r\n        }`}\r\n      >\r\n        <p className=\"message\">{data.message}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Sidebar.js",["90","91","92"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport \"./chatbox.css\";\r\n\r\nconst Sidebar = ({ dummyData }) => {\r\n  const getRandomColorLight = (val) => {\r\n    const color = \"hsl(\" + (val % 10) * 36 + \", 100%, 75%)\";\r\n    return color;\r\n  };\r\n  const getRandomColorDark = (val) => {\r\n    const color = \"hsl(\" + (val % 10) * 36 + \", 100%, 15%)\";\r\n    return color;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <Typography className=\"header-title\">Chats.</Typography>\r\n      </div>\r\n      <div className=\"search-wrapper\">\r\n        <input type=\"text\" className=\"search\" placeholder=\"Search...\" />\r\n      </div>\r\n      <div className=\"room-list\">\r\n        {dummyData.map((data, index) => (\r\n          <div key={index} className=\"room\">\r\n            <Avatar\r\n              className=\"sidebar-avatar\"\r\n              style={{\r\n                backgroundColor: `${getRandomColorLight(index)}`,\r\n                color: `${getRandomColorDark(index)}`,\r\n              }}\r\n            >\r\n              {data.name.substring(0, 1)}\r\n            </Avatar>\r\n            <div className=\"room-details\">\r\n              <div className=\"grid-line\">\r\n                <p className=\"room-name\">{data.name}</p>\r\n                <p className=\"room-timestamp\">{data.timestamp}</p>\r\n              </div>\r\n              <div className=\"grid-line\">\r\n                <p className=\"room-description\">{data.last}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\components\\Chatbox\\Activeroom.js",["93","94","95","96","97","98","99","100","101","102"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { dummyData, messages as dummyMessages } from \"./dummyrooms\";\r\nimport Message from \"./Message\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport \"./chatbox.css\";\r\n\r\nconst Activeroom = ({ messages, user, room }) => {\r\n  const scrollRef = useRef(null);\r\n  useEffect(() => {\r\n    scrollRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n  }, [room]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header chat-header\">\r\n        <Avatar className=\"header-avatar\"></Avatar>\r\n        <div className=\"chat-details\">\r\n          <div className=\"grid-line\">\r\n            <p className=\"chat-title\">Ghughu</p>\r\n          </div>\r\n          <div className=\"grid-line\">\r\n            <p className=\"chat-last-online\">Hello This is another status</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"main-body\">\r\n        {dummyMessages.map((message, index) => (\r\n          <Message data={message} user={user} key={index} />\r\n        ))}\r\n        <div className=\"scroll-bottom\" ref={scrollRef}></div>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"chat-input\"\r\n          placeholder=\"Enter your message...\"\r\n        />\r\n        <IconButton className=\"chat-submit\">\r\n          <SendIcon\r\n            className=\"send-icon\"\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Activeroom;\r\n","C:\\Users\\Subhajit Mandal\\Projects+Prac\\React\\Chatbox-firebase\\src\\constants.js",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":57,"column":10,"nodeType":"105","messageId":"106","endLine":57,"endColumn":14},{"ruleId":"103","severity":1,"message":"112","line":78,"column":15,"nodeType":"105","messageId":"106","endLine":78,"endColumn":27},{"ruleId":"103","severity":1,"message":"113","line":19,"column":8,"nodeType":"105","messageId":"106","endLine":19,"endColumn":12},{"ruleId":"103","severity":1,"message":"114","line":20,"column":8,"nodeType":"105","messageId":"106","endLine":20,"endColumn":21},{"ruleId":"103","severity":1,"message":"115","line":94,"column":9,"nodeType":"105","messageId":"106","endLine":94,"endColumn":21},{"ruleId":"103","severity":1,"message":"116","line":1,"column":35,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"117","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"118","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":11},{"ruleId":"103","severity":1,"message":"119","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"120","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":18},{"ruleId":"103","severity":1,"message":"121","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":16},{"ruleId":"103","severity":1,"message":"122","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":18},{"ruleId":"103","severity":1,"message":"123","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":14},{"ruleId":"103","severity":1,"message":"124","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":20},{"ruleId":"103","severity":1,"message":"125","line":10,"column":22,"nodeType":"105","messageId":"106","endLine":10,"endColumn":30},{"ruleId":"103","severity":1,"message":"126","line":12,"column":8,"nodeType":"105","messageId":"106","endLine":12,"endColumn":15},{"ruleId":"103","severity":1,"message":"127","line":18,"column":10,"nodeType":"105","messageId":"106","endLine":18,"endColumn":15},{"ruleId":"103","severity":1,"message":"128","line":18,"column":17,"nodeType":"105","messageId":"106","endLine":18,"endColumn":25},{"ruleId":"103","severity":1,"message":"129","line":19,"column":16,"nodeType":"105","messageId":"106","endLine":19,"endColumn":23},{"ruleId":"103","severity":1,"message":"130","line":20,"column":10,"nodeType":"105","messageId":"106","endLine":20,"endColumn":18},{"ruleId":"103","severity":1,"message":"131","line":20,"column":20,"nodeType":"105","messageId":"106","endLine":20,"endColumn":31},{"ruleId":"103","severity":1,"message":"132","line":21,"column":9,"nodeType":"105","messageId":"106","endLine":21,"endColumn":18},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"133","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"122","line":2,"column":16,"nodeType":"105","messageId":"106","endLine":2,"endColumn":26},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"134","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":33},{"ruleId":"103","severity":1,"message":"116","line":1,"column":35,"nodeType":"105","messageId":"106","endLine":1,"endColumn":44},{"ruleId":"103","severity":1,"message":"104","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"117","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"133","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":12},{"ruleId":"103","severity":1,"message":"118","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":11},{"ruleId":"103","severity":1,"message":"119","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":13},{"ruleId":"103","severity":1,"message":"122","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":18},{"ruleId":"103","severity":1,"message":"124","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":20},{"ruleId":"103","severity":1,"message":"125","line":10,"column":22,"nodeType":"105","messageId":"106","endLine":10,"endColumn":30},{"ruleId":"103","severity":1,"message":"135","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":19},{"ruleId":"103","severity":1,"message":"136","line":13,"column":8,"nodeType":"105","messageId":"106","endLine":13,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["137"],"no-negated-in-lhs",["138"],"'user' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'chat' is defined but never used.","'createPalette' is defined but never used.","'authListener' is assigned a value but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'Box' is defined but never used.","'Paper' is defined but never used.","'IconButton' is defined but never used.","'SendIcon' is defined but never used.","'Typography' is defined but never used.","'Avatar' is defined but never used.","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'Message' is defined but never used.","'rooms' is assigned a value but never used.","'setRooms' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'scrollRef' is assigned a value but never used.","'Grid' is defined but never used.","'useRef' is defined but never used.","'dummyData' is defined but never used.","'Sidebar' is defined but never used.","no-global-assign","no-unsafe-negation"]